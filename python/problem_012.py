import math

"""The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?
"""

def get_factors(num):
    factors = set([])

    for i in range(1, math.ceil(math.sqrt(num))):
        if num % i == 0:
            factors.add(i)
            factors.add(int(num / i))

    factors.add(num)

    return factors


target = 500
searching = True
idx = 1
num = 0

greatest_length = 0
greatest = 0

while searching:
    num = num + idx

    factors = get_factors(num)
    length = len(factors)

    if length > greatest_length:
        greatest_length = length
        greatest = num
        print(str(num) + ' HAS ' + str(len(factors)) + ' FACTORS')

    if length > target:
        print(num)
        # print(factors)
        searching = False

    idx = idx + 1
